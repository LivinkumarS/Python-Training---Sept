Python:
>> High level and interpreted Programming language. General purpose language.

compilation:
>> The entire code is converted into machine code (binary code) before execution.
c, c++, java              

interpretation:
>> Code is converted line by line.
Python

Extension to create python file --> .py
command to execute a python file in cli --> "python filename.py"

to show something in output
----------------------------
print(val)

to prompt data from user
--------------------------
input()  ---> always return a string

variables 
---------
>> just a containers, used to store a piece of data.
varName = value

Naming rules:
--------------
>> must start with a letter or "_"
>> can contain numerical, letters and "_"
>> case sensitive. a=A
>> cannot use keywords as variable name

Comments
-----------
To increase readability.

Single line comment ---> #
Multiple line comment ---> ''' comment '''

Basic sytax of Python
---------------------
>> Python is case-sensitive.(a not equal to A)
>> Indentation matters (no {}. use space)

Datatypes of Python 
-------------------

type(obj)---> return datatype of an object. <class 'bool'>

int --> whole numbers---> -1,-2,0,1,2,3,4
float--> decimal numbers --> 1.23,4.556

string---> sequence of chars --> '' or "" 
+ --> str1 + str2 (concatination)
string-formatting
-------------------
f'' ---> f"  {var1}  {var2}...."

boolean---> True or False

Type casting
-------------
int() ---> anything into int
str() ---> anything into str
float() ---> anything into float


Operators
-----------

2 + 3 = 5  --> expression. + --> operator

>> Operators are special symbols that perform operations on values.

Arithmetice Operator 
--------------------
Addition  ---> + 
Subtraction ---> -
multiplication --> *
division --> /
floor division --> //
modulus ---> % (reminder). 4%8 --> 8*0--> 4-0--> 4
Exponential --> **. ex: 2**4

BODMAS--> Brackets Order(Of) Div Mul Add Sub.

Comparison Operator (Relational) (Boolean Values) 
-------------------
== --> Equal.
< ---> lesser than
> --> Greater than
<= --> lesser than or equal to
>= --> greater than or equal to

Logical Operators 
------------------(operates with boolean values) (boolean)

AND --> and --> performs AND operation with two boolean values.
OR  --> or  --> performs OR operation with two boolean values.

bool1   bool2   AND     OR   
True    True    True    True
False   True    False   True
True    False   False   True
False   False   False   False

NOT --> not --> operates with only one bool. revert.


Assignment Operator 
-------------------
= --> equals
+= --> add and assign.
-= --> sub assign.
*= --> mul and assign
/= --> div and assign
//= --> floor div and assign
%= --> mod and assign
**= --> expo and assign

Bitwise Operator  (bits)
-----------------
AND --> & --> AND operation between bits.
OR  --> | --> Or operation between bits.
NOT --> ~ --> NOT operation between bits. ~n=-(n+1)
Right shift --> >> --> move the bits towards right for specified positions. 10>>2
Left shift --> << --> move the bits towards left for specified positions. 10<<2